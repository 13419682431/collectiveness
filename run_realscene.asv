%% Measuring collectiveness at each frame of single video

clear
curVideo = 'marathon\';
curTrkName = 'klt_3000_10_trk.txt';

%% Collectiveness parameter
para.K = 20;
para.lamda = 0.5/para.K ;
para.upperBound = para.K*para.lamda/(1-para.K*para.lamda);
para.threshold = 0.6*para.lamda/(1-para.K*para.lamda);

%%
curClipFrameSet = dir([curVideo '\*.jpg']);
curTrks = readTraks([curVideo '\' curTrkName]);
[XVset] = trk2XV(curTrks, 1, 2);

figure
for j=3:length(curClipFrameSet)     
    curFrame = imread([curVideo '\' curClipFrameSet(j).name]);    
    curFrame = im2double(curFrame);
    curIndex = find(XVset(:, 5) == j);
    curX = XVset(curIndex,1:2);
    curV = XVset(curIndex,3:4);  
    curOrder = SDP_order(curV);
    [collectivenessSet, crowdCollectiveness, Zmatrix] = measureCollectiveness( curX, curV, para);
    [ clusterIndex ] = collectiveMerging( Zmatrix, para );
    hold off, imshow(curFrame),hold on
    %%%%%%%%%%%% plot single clusters 
     
%     scatter(curX(:,1),curX(:,2)),
%     quiver(curX(:,1),curX(:,2),curV(:,1),curV(:,2),'y');
     
%     drawnow
    %%%%%%%%%%% plot points with different clusters
    scatter(curX(:,1),curX(:,2),'+r')
    for jj=1:max(clusterIndex)         
        curClusterIndex=find(clusterIndex==jj);         
        scatter(curX(curClusterIndex,1),curX(curClusterIndex,2),[],CFshowTag(jj+7),'filled'),      
        quiver(curX(curClusterIndex,1),curX(curClusterIndex,2)',curV(curClusterIndex,1),curV(curClusterIndex,2),1,'color',CFshowTag(jj+7)),
        hold on
    end   
    title(['No.Points=' num2str(size(curX,1)) ',order=' num2str(curOrder) ',Collectiveness=' num2str(crowdCollectiveness)])
    drawnow
end

